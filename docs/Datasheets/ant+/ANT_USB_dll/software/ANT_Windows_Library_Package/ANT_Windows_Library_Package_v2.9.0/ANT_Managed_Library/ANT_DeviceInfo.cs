//////////////////////////////////////////////////////////////////////////
// Copyright (c) 2009 Dynastream Innovations Inc.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
// 
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
//////////////////////////////////////////////////////////////////////////


#if (!REFERENCE_DESIGN)
/*
 * CVS Information - autogenerated - do not modify
 *
 * $Header: /repository/Support_Utilities/ANT_NET/ANT_Managed_Library/ANT_Managed_Library/ANT_DeviceInfo.cs,v 1.2 2009-11-04 18:07:13 canotinoco Exp $
 *
 **************************************************************************
 *
 * To view log use the CVS log command
 */
#endif

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ANT_Managed_Library
{
    /// <summary>
    /// Container for all the USB Device information, returned from an ANTDevice
    /// </summary>
    public class ANT_DeviceInfo
    {
        /// <summary>
        /// USB Device Product Description
        /// </summary>
        public byte[] productDescription;

        /// <summary>
        /// USB Device Serial String
        /// </summary>
        public byte[] serialString;

        internal ANT_DeviceInfo(byte[] productDescription, byte[] serialString)
        {
            this.productDescription = productDescription;
            this.serialString = serialString;
        }

        /// <summary>
        /// Returns a formatted, readable string for the product description
        /// </summary>
        public String printProductDescription()
        {
           return printBytes(productDescription);
        }

        /// <summary>
        /// Returns a formatted, readable string for the serial string
        /// </summary>
        public String printSerialString()
        {
            return printBytes(serialString);
        }

        private String printBytes(byte[] rawBytes)
        {
            // Decode as null terminated ASCII string
            string formattedString = System.Text.Encoding.ASCII.GetString(rawBytes);
            return (formattedString.Remove(formattedString.IndexOf('\0')));
        }

    };
}
