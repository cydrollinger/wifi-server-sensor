//////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010 Dynastream Innovations Inc.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
// 
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
//////////////////////////////////////////////////////////////////////////

#if (!REFERENCE_DESIGN)
/*
 * CVS Information - autogenerated - do not modify
 *
 * $Header: /repository/Support_Utilities/ANT_NET/ANT_Managed_Library/ANT_Managed_Library/ANTFS/ANTFS_ResponseParameters.cs,v 1.1 2011-11-14 18:38:00 gallup Exp $
 *
 **************************************************************************
 *
 * To view log use the CVS log command
 */
#endif

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;

namespace ANT_Managed_Library.ANTFS
{
    /// <summary>
    /// Application defined parameters for a download response
    /// </summary>
    [StructLayout(LayoutKind.Sequential)]
    public struct ANTFS_DownloadParameters
    {
        /// <summary>
        /// File index of requested download
        /// </summary>
        public ushort FileIndex;
        /// <summary>
        /// Maximum number of bytes to send in a single block
        /// </summary>
        public uint MaxBlockSize;
    }

    /// <summary>
    /// Application defined parameters for an upload response
    /// </summary>
    [StructLayout(LayoutKind.Sequential)]
    public struct ANTFS_UploadParameters
    {
        /// <summary>
        /// File index of requested upload
        /// </summary>
        public ushort FileIndex;
        /// <summary>
        /// Maximum file size that can be stored in requested upload location
        /// </summary>
        public uint MaxFileSize;
        /// <summary>
        /// Maximum number of bytes that can be received in a single block
        /// </summary>
        public uint MaxBlockSize;
    }
}